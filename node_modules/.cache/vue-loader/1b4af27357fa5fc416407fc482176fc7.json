{"remainingRequest":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jinkang/Desktop/Vue-MusicPlayer/src/components/music-list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/src/components/music-list/index.vue","mtime":1571152196854},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SongList from '@/base/song-list'\nimport Scroll from '@/base/scroll'\nimport Loading from '@/base/loading'\nconst TITLE_HEIGHT = 60;\nimport {prefixStyle} from '@/common/js/dom'\nimport {mapActions} from 'vuex'\n\nexport default{\n\tname:'music-list',\n\tcomponents:{Scroll,SongList,Loading},\n\tprops:{\n\t\ttitle:{\n\t\t\ttype:String,\n\t\t\tdefault:''\n\t\t},\n\t\tbgImage:{\n\t\t\ttype:String,\n\t\t\tdefault:''\n\t\t},\n\t\tsongs:{\n\t\t\ttype:Array,\n\t\t\tdefault:function(){\n\t\t\t\treturn []\n\t\t\t}\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.listenScroll = true,\n\t\tthis.probeType = 3\n\t},\n\tcomputed:{\n\t\tbgStyle(){\n\t\t\treturn `backgroundImage:url(${this.bgImage})`\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.bgHeight = this.$refs.bgImage.offsetHeight;\n\t\tthis.$refs.list.$el.style.top = this.bgHeight + 'px';\n\t\tthis.maxTranslateY = -this.bgHeight + TITLE_HEIGHT;\n\t},\n\tmethods:{\n\t\t...mapActions(['selectPlay']),\n\t\thandleBack(){\n\t\t\tthis.$router.back()\n\t\t},\n\t\tscroll(pos){\n\t\t\t/*\n\t\t\t下面有两种思路，设置好一个最大的滚动偏移量(最大滚动距离为图片的高度 - 顶部预留的距离)\n\t\t\t1. 当滚动的距离大于设置好的最大滚动偏移量时，直接return，\n\t\t\t2. 求最大滚动距离偏移量的相反数 和 实时滚动的时的偏移量 两者的最大值，layer滚动的距离为两个参数的最大值\n\t\t\t\n\t\t\ttips: 综合考虑，第二种写法更好，灵活运用Math.max()函数，并且在设置z-index的时候，只用在判断语句里的重置zindex的值，\n\t\t\t再统一 设置 元素的zindex值即可。\n\t\t\t*/\n\t\t\tlet translateY = Math.max(this.maxTranslateY,pos.y);\n\t\t\tthis.$refs.layer.style[prefixStyle('transform')] = `translate3d(0,${translateY}px,0)`;\n\t\t\t\n\t\t\tlet zIndex = 0;\n\t\t\tif(  pos.y < this.maxTranslateY ){\n\t\t\t   zIndex = 10;\n\t\t\t   this.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n\t\t\t   this.$refs.bgImage.style.paddingTop = 0;\n\t\t\t}else{\n\t\t\t   this.$refs.bgImage.style.paddingTop = '80%'\n\t\t\t   this.$refs.bgImage.style.height = 0;\n\t\t\t}\n\t\t\tthis.$refs.bgImage.style.zIndex = zIndex;\n\t\t\t\n\t\t\tif(pos.y > 0){\n\t\t\t\tlet percent = Math.abs(pos.y / this.bgHeight);\n\t\t\t\tlet scale = percent + 1;\n\t\t\t\tthis.$refs.bgImage.style[prefixStyle('transform')] = `scale(${scale})`;\n\t\t\t}else{\n\t\t\t\tlet blur = Math.max( -pos.y / (this.bgHeight - TITLE_HEIGHT) * 15, 15 );\n\t\t\t\tthis.$refs.filter.style[prefixStyle('backdrop-filter')] = `filter(${blur}px)`;\n\t\t\t}\n\t\t   /*\n\t\t\tlet maxTranslateY = this.bgHeight - TITLE_HEIGHT;\n\n\t\t\tif(- pos.y > maxTranslateY) {\n\t\t\t\tthis.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n\t\t\t\tthis.$refs.bgImage.style.paddingTop = 0;\n\t\t\t\tthis.$refs.bgImage.style.zIndex = 10;\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tthis.$refs.bgImage.style.paddingTop = '80%';\n\t\t\t\tthis.$refs.bgImage.style.height = 0;\n\t\t\t\tthis.$refs.bgImage.style.zIndex = 0;\n\t\t\t}\n\t\t\tthis.$refs.layer.style['transform'] = `translate3d(0,${pos.y}px,0)`\n\t\t\tthis.$refs.layer.style['webKittransform'] = `translate3d(0,${pos.y}px,0)` \n\t\t\t*/\n\t\t},\n\t\t/*\n\t\t点击歌曲时，需要播放歌曲，展开播放歌曲页面，添加当前的播放列表，\n\t\t*/\n\t\tselectSong(item,index){\n\t\t\tthis.selectPlay({list:this.songs,index});\n\t\t}\n\t},\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/music-list","sourcesContent":["<template>\n\t<div class=\"music-list\">\n\t\t<i \n\t\t\tclass=\"iconfont icon-back\"\n\t\t\t@touchstart.stop='handleBack'\n\t\t>&#xe64d;</i>\n\t\t<h2 class=\"singer-name\">{{title}}</h2>\n\t\t<div class=\"singer-wrapper\" :style='bgStyle' ref='bgImage'>\n\t\t\t<div class=\"filter\" ref='filter'></div>\n\t\t</div>\n\t\t<div class=\"bg-layer\" ref='layer'></div>\n\t\t<Scroll \n\t\t\t:data='songs' \n\t\t\tref='list' \n\t\t\tclass='list' \n\t\t\t:probe-type='probeType' \n\t\t\t:listen-scroll='listenScroll'\n\t\t\t@scroll='scroll'\n\t\t>\n\t\t\t<div class=\"song-list-wrapper\">\n\t\t\t\t<SongList \n\t\t\t\t\t:songs='songs'\n\t\t\t\t\t@selectItem='selectSong'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Loading v-show='!songs.length'/>\n\t\t</Scroll>\n\t</div>\n</template>\n\n<script>\n\timport SongList from '@/base/song-list'\n\timport Scroll from '@/base/scroll'\n\timport Loading from '@/base/loading'\n\tconst TITLE_HEIGHT = 60;\n\timport {prefixStyle} from '@/common/js/dom'\n\timport {mapActions} from 'vuex'\n\t\n\texport default{\n\t\tname:'music-list',\n\t\tcomponents:{Scroll,SongList,Loading},\n\t\tprops:{\n\t\t\ttitle:{\n\t\t\t\ttype:String,\n\t\t\t\tdefault:''\n\t\t\t},\n\t\t\tbgImage:{\n\t\t\t\ttype:String,\n\t\t\t\tdefault:''\n\t\t\t},\n\t\t\tsongs:{\n\t\t\t\ttype:Array,\n\t\t\t\tdefault:function(){\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tthis.listenScroll = true,\n\t\t\tthis.probeType = 3\n\t\t},\n\t\tcomputed:{\n\t\t\tbgStyle(){\n\t\t\t\treturn `backgroundImage:url(${this.bgImage})`\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.bgHeight = this.$refs.bgImage.offsetHeight;\n\t\t\tthis.$refs.list.$el.style.top = this.bgHeight + 'px';\n\t\t\tthis.maxTranslateY = -this.bgHeight + TITLE_HEIGHT;\n\t\t},\n\t\tmethods:{\n\t\t\t...mapActions(['selectPlay']),\n\t\t\thandleBack(){\n\t\t\t\tthis.$router.back()\n\t\t\t},\n\t\t\tscroll(pos){\n\t\t\t\t/*\n\t\t\t\t下面有两种思路，设置好一个最大的滚动偏移量(最大滚动距离为图片的高度 - 顶部预留的距离)\n\t\t\t\t1. 当滚动的距离大于设置好的最大滚动偏移量时，直接return，\n\t\t\t\t2. 求最大滚动距离偏移量的相反数 和 实时滚动的时的偏移量 两者的最大值，layer滚动的距离为两个参数的最大值\n\t\t\t\t\n\t\t\t\ttips: 综合考虑，第二种写法更好，灵活运用Math.max()函数，并且在设置z-index的时候，只用在判断语句里的重置zindex的值，\n\t\t\t\t再统一 设置 元素的zindex值即可。\n\t\t\t\t*/\n\t\t\t\tlet translateY = Math.max(this.maxTranslateY,pos.y);\n\t\t\t\tthis.$refs.layer.style[prefixStyle('transform')] = `translate3d(0,${translateY}px,0)`;\n\t\t\t\t\n\t\t\t\tlet zIndex = 0;\n\t\t\t\tif(  pos.y < this.maxTranslateY ){\n\t\t\t\t   zIndex = 10;\n\t\t\t\t   this.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n\t\t\t\t   this.$refs.bgImage.style.paddingTop = 0;\n\t\t\t\t}else{\n\t\t\t\t   this.$refs.bgImage.style.paddingTop = '80%'\n\t\t\t\t   this.$refs.bgImage.style.height = 0;\n\t\t\t\t}\n\t\t\t\tthis.$refs.bgImage.style.zIndex = zIndex;\n\t\t\t\t\n\t\t\t\tif(pos.y > 0){\n\t\t\t\t\tlet percent = Math.abs(pos.y / this.bgHeight);\n\t\t\t\t\tlet scale = percent + 1;\n\t\t\t\t\tthis.$refs.bgImage.style[prefixStyle('transform')] = `scale(${scale})`;\n\t\t\t\t}else{\n\t\t\t\t\tlet blur = Math.max( -pos.y / (this.bgHeight - TITLE_HEIGHT) * 15, 15 );\n\t\t\t\t\tthis.$refs.filter.style[prefixStyle('backdrop-filter')] = `filter(${blur}px)`;\n\t\t\t\t}\n\t\t\t   /*\n\t\t\t\tlet maxTranslateY = this.bgHeight - TITLE_HEIGHT;\n\n\t\t\t\tif(- pos.y > maxTranslateY) {\n\t\t\t\t\tthis.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n\t\t\t\t\tthis.$refs.bgImage.style.paddingTop = 0;\n\t\t\t\t\tthis.$refs.bgImage.style.zIndex = 10;\n\t\t\t\t\treturn;\n\t\t\t\t}else{\n\t\t\t\t\tthis.$refs.bgImage.style.paddingTop = '80%';\n\t\t\t\t\tthis.$refs.bgImage.style.height = 0;\n\t\t\t\t\tthis.$refs.bgImage.style.zIndex = 0;\n\t\t\t\t}\n\t\t\t\tthis.$refs.layer.style['transform'] = `translate3d(0,${pos.y}px,0)`\n\t\t\t\tthis.$refs.layer.style['webKittransform'] = `translate3d(0,${pos.y}px,0)` \n\t\t\t\t*/\n\t\t\t},\n\t\t\t/*\n\t\t\t点击歌曲时，需要播放歌曲，展开播放歌曲页面，添加当前的播放列表，\n\t\t\t*/\n\t\t\tselectSong(item,index){\n\t\t\t\tthis.selectPlay({list:this.songs,index});\n\t\t\t}\n\t\t},\n\t}\n</script>\n\n<style lang='scss' scoped>\n\t.music-list{\n\t\tposition:fixed;\n\t\tleft:0;\n\t\tright:0;\n\t\ttop:0;\n\t\tbottom:0;\n\t\tz-index:100;\n\t\tbackground-color:#fafafa;\n\t\t.icon-back{\n\t\t\tposition:absolute;\n\t\t\tcolor:#fff;\n\t\t\ttop:20px;\n\t\t\tleft:18px;\n\t\t\tfont-size:18px;\n\t\t\tz-index:30;\n\t\t}\n\t\t.singer-wrapper{\n\t\t\tposition:relative;\n\t\t\theight:0;\n\t\t\tpadding-top:80%;\n\t\t\tbackground-size:cover;\n\t\t\tbackground-repeat:no-repeat;\n\t\t\ttransform-origin:center top;\n\t\t}\n\t\t.singer-name{\n\t\t\tposition:absolute;\n\t\t\ttop:20px;\n\t\t\twidth:100%;\n\t\t\ttext-align:center;\n\t\t\tfont-size:16px;\n\t\t\tcolor:#fff;\n\t\t\tline-height:18px;\n\t\t\tz-index:20;\n\t\t}\n\t\t.list{\n\t\t\tposition:absolute;\n\t\t\twidth:100%;\n\t\t\tbottom:0;\n\t\t\ttop:0;\n\t\t}\n\t\t.song-list-wrapper{\n\t\t\tpadding:0 16px;\n\t\t}\n\t\t.bg-layer{\n\t\t\tposition:relative;\n\t\t\theight:100%;\n\t\t\twidth:100%;\n\t\t\tbackground-color:#fafafa;\n\t\t}\n\t}\n</style>\n"]}]}
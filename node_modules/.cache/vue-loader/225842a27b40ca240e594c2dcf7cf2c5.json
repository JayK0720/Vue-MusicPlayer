{"remainingRequest":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jinkang/Desktop/Vue-MusicPlayer/src/base/progress-bar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/src/base/progress-bar/index.vue","mtime":1571841127447},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst barWidth = 12;\nimport {prefixStyle} from '@/common/js/dom'\nconst transform = prefixStyle('transform');\nexport default{\n\tname:'progress-bar',\n\tprops:{\n\t\tpercent:{\n\t\t\ttype:Number,\n\t\t\tdefault:0\n\t\t}\n\t},\n\tcreated(){\n\t\tthis.touch = {}\n\t},\n\tmethods:{\n\t\t/*\n\t\t1. 拖动开始的时候先初始化, 圆点的初始位置，以及此时歌曲播放的进度 \n\t\t2. 拖动过程中实时获取拖动的数据, 减去初始的x坐标，再加上进度条的宽度，即为此时歌曲的播放进度\n\t\t*/\n\t\thandleTouchStart(e){\n\t\t\tthis.touch.startX = e.touches[0].pageX;\n\t\t\tthis.touch.progressWidth = this.$refs.progress.offsetWidth;\n\t\t\tthis.touch.initial = true;\n\t\t},\n\t\thandleTouchMove(e){\n\t\t\tif(!this.touch.initial) return;\n\t\t\tconst delta = e.touches[0].pageX - this.touch.startX;\n\t\t\t/*offsetWidth的最大宽度不能超过一个定值,同样,最小值不能小于0*/\n\t\t\tconst offsetWidth = Math.min( this.$refs.slider.offsetWidth - barWidth/2 , Math.max(0,this.touch.progressWidth+delta) );\n\t\t\tthis._setProgress(offsetWidth);\n\t\t},\n\t\thandleTouchEnd(e){\n\t\t\tthis.touch.initial = false;\n\t\t\t/*const totalWidth = this.$refs.slider.offsetWidth - barWidth; \n\t\t\tconst percent = this.$refs.progress.offsetWidth / totalWidth;\n\t\t\tthis.$emit('percentChange',percent); */\n\t\t\tthis._triggerPercent();\n\t\t},\n\t\t_setProgress(offsetWidth){\n\t\t\tthis.$refs.progress.style.width = `${offsetWidth}px`;\n\t\t\tthis.$refs.bar.style.transform = `translate3d(${offsetWidth}px,0,0)`;\n\t\t},\n\t\thandleChangeProgress(e){\n\t\t\tconst offsetWidth = e.offsetX - barWidth/2;\n\t\t\tthis._setProgress(offsetWidth);\n\t\t\tthis._triggerPercent()\n\t\t},\n\t\t_triggerPercent(){\n\t\t\tconst totalWidth = this.$refs.slider.offsetWidth - barWidth;\n\t\t\tconst percent = this.$refs.progress.offsetWidth / totalWidth;\n\t\t\tthis.$emit('percentChange',percent);\n\t\t}\n\t},\n\twatch:{\n\t\tpercent(value) {\n\t\t\t// 在拖动的过程中,歌曲一直在播放，此时也会设置 进度条的宽度 和 bar的位置\n\t\t\tif(this.touch.initial) return;\n\t\t\tconst sliderWidth = this.$refs.slider.offsetWidth - barWidth;\n\t\t\tlet offsetWidth = sliderWidth * value;\n\t\t\tthis._setProgress(offsetWidth);\n\t\t}\n\t}\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/base/progress-bar","sourcesContent":["<template>\n\t<div class=\"progress-slider\" ref='slider' @click='handleChangeProgress'>\n\t\t<div class=\"progress\" ref='progress'></div>\n\t\t<div \n\t\t\tclass=\"slider-bar\" \n\t\t\tref='bar'\n\t\t\t@touchstart.prevent='handleTouchStart'\n\t\t\t@touchmove.prevent='handleTouchMove'\n\t\t\t@touchend.prevent='handleTouchEnd'\n\t\t></div>\n\t</div>\n</template>\n\n<script>\n\tconst barWidth = 12;\n\timport {prefixStyle} from '@/common/js/dom'\n\tconst transform = prefixStyle('transform');\n\texport default{\n\t\tname:'progress-bar',\n\t\tprops:{\n\t\t\tpercent:{\n\t\t\t\ttype:Number,\n\t\t\t\tdefault:0\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\tthis.touch = {}\n\t\t},\n\t\tmethods:{\n\t\t\t/*\n\t\t\t1. 拖动开始的时候先初始化, 圆点的初始位置，以及此时歌曲播放的进度 \n\t\t\t2. 拖动过程中实时获取拖动的数据, 减去初始的x坐标，再加上进度条的宽度，即为此时歌曲的播放进度\n\t\t\t*/\n\t\t\thandleTouchStart(e){\n\t\t\t\tthis.touch.startX = e.touches[0].pageX;\n\t\t\t\tthis.touch.progressWidth = this.$refs.progress.offsetWidth;\n\t\t\t\tthis.touch.initial = true;\n\t\t\t},\n\t\t\thandleTouchMove(e){\n\t\t\t\tif(!this.touch.initial) return;\n\t\t\t\tconst delta = e.touches[0].pageX - this.touch.startX;\n\t\t\t\t/*offsetWidth的最大宽度不能超过一个定值,同样,最小值不能小于0*/\n\t\t\t\tconst offsetWidth = Math.min( this.$refs.slider.offsetWidth - barWidth/2 , Math.max(0,this.touch.progressWidth+delta) );\n\t\t\t\tthis._setProgress(offsetWidth);\n\t\t\t},\n\t\t\thandleTouchEnd(e){\n\t\t\t\tthis.touch.initial = false;\n\t\t\t\t/*const totalWidth = this.$refs.slider.offsetWidth - barWidth; \n\t\t\t\tconst percent = this.$refs.progress.offsetWidth / totalWidth;\n\t\t\t\tthis.$emit('percentChange',percent); */\n\t\t\t\tthis._triggerPercent();\n\t\t\t},\n\t\t\t_setProgress(offsetWidth){\n\t\t\t\tthis.$refs.progress.style.width = `${offsetWidth}px`;\n\t\t\t\tthis.$refs.bar.style.transform = `translate3d(${offsetWidth}px,0,0)`;\n\t\t\t},\n\t\t\thandleChangeProgress(e){\n\t\t\t\tconst offsetWidth = e.offsetX - barWidth/2;\n\t\t\t\tthis._setProgress(offsetWidth);\n\t\t\t\tthis._triggerPercent()\n\t\t\t},\n\t\t\t_triggerPercent(){\n\t\t\t\tconst totalWidth = this.$refs.slider.offsetWidth - barWidth;\n\t\t\t\tconst percent = this.$refs.progress.offsetWidth / totalWidth;\n\t\t\t\tthis.$emit('percentChange',percent);\n\t\t\t}\n\t\t},\n\t\twatch:{\n\t\t\tpercent(value) {\n\t\t\t\t// 在拖动的过程中,歌曲一直在播放，此时也会设置 进度条的宽度 和 bar的位置\n\t\t\t\tif(this.touch.initial) return;\n\t\t\t\tconst sliderWidth = this.$refs.slider.offsetWidth - barWidth;\n\t\t\t\tlet offsetWidth = sliderWidth * value;\n\t\t\t\tthis._setProgress(offsetWidth);\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped lang='scss'>\n\t.progress-slider{\n\t\tposition:relative;\n\t\twidth:100%;\n\t\theight:100%;\n\t\tbackground-color:#fff;\n\t}\n\t.progress{\n\t\twidth:0;\n\t\theight:100%;\n\t\tbackground-color:#2ed296;\n\t}\n\t.slider-bar{\n\t\tposition:absolute;\n\t\tleft:0;\n\t\ttop:-5px;\n\t\twidth:12px;\n\t\theight:12px;\n\t\tborder-radius:50%;\n\t\tbackground-color:#fff;\n\t}\n</style>\n"]}]}
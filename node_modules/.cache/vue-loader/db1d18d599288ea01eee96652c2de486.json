{"remainingRequest":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jinkang/Desktop/Vue-MusicPlayer/src/views/singer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/src/views/singer/index.vue","mtime":1570533157654},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport {getSinger} from '@/common/api/singer'\nimport {ERR_OK} from '@/common/api/config'\nimport ListView from '@/base/listview'\nimport {mapMutations} from 'vuex'\n\nconst HOT_NAME = '热门歌手',\n\t  HOT_NAME_LENGTH = 10;\n\nexport default {\n\tname:'singer',\n\tdata() {\n\t\treturn {\n\t\t\tsingers:[],\t\n\t\t}\n\t},\n\tcreated(){\n\t\tthis._getSinger()\n\t},\n\tcomponents:{ListView},\n\tmethods:{\n\t\t...mapMutations({\n\t\t\t'setSinger':'SET_SINGER'\n\t\t}),\n\t\thandleSelectSinger(singer){\n\t\t\tthis.$router.push(`/singer/${singer.id}`)\n\t\t\tthis.setSinger(singer);\n\t\t},\n\t\t_getSinger(){\n\t\t\tgetSinger().then(res => {\n\t\t\t\tif(res.code === ERR_OK){\n\t\t\t\t\tthis.singers = this._normalizeSinger(res.data.list);\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\t/*_normalizeSinger(singer){\n\t\t\tlet singerList = [];\n\t\t\tfor(let i = 0,len = singer.length; i < len; i++ ){\n\t\t\t\tif( hasIndex( singer[i].Findex ) ){\n\t\t\t\t\tfor(let j = 0; j < singerList.length; j++){\n\t\t\t\t\t\tif( singerList[j].Findex === singer[i].Findex ){\n\t\t\t\t\t\t\tsingerList[j].list.push(singer[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsingerList.push({Findex:singer[i].Findex,list:[singer[i]]});\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction hasIndex(Findex){\n\t\t\t\tfor(let i = 0; i < singerList.length; i++){\n\t\t\t\t\tif(singerList[i].Findex === Findex){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfunction compare(a,b){\n\t\t\t\tif(a.Findex < b.Findex) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif(a.Findex > b.Findex){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tsingerList.sort(compare);\n\t\t\treturn singerList;\n\t\t}\n\t\t*/\n\t   _normalizeSinger(list){\n\t\t   const map = {\n\t\t\t   hot:{\n\t\t\t\t   title:HOT_NAME,\n\t\t\t\t   items:[]\n\t\t\t   }\n\t\t   }\n\t\t   list.forEach( (item,index) => {\n\t\t\t   if( index < HOT_NAME_LENGTH ){\n\t\t\t\t   map.hot.items.push({\n\t\t\t\t\t   name:item.Fsinger_name,\n\t\t\t\t\t   id:item.Fsinger_id,\n\t\t\t\t\t   singerMid:item.Fsinger_mid,\n\t\t\t\t\t   avatar:`https://y.gtimg.cn/music/photo_new/T001R150x150M000${item.Fsinger_mid}.jpg?max_age=2592000`\n\t\t\t\t   });\n\t\t\t   }\n\t\t\t   const key = item.Findex;\n\t\t\t   if( !map[key] ){\n\t\t\t\t\tmap[key] = {\n\t\t\t\t\t\ttitle:key,\n\t\t\t\t\t\titems:[]\n\t\t\t\t\t}\n\t\t\t   }\n\t\t\t   map[key].items.push({\n\t\t\t\t   name:item.Fsinger_name,\n\t\t\t\t   id:item.Fsinger_id,\n\t\t\t\t   singerMid:item.Fsinger_mid,\n\t\t\t\t   avatar:`https://y.gtimg.cn/music/photo_new/T001R150x150M000${item.Fsinger_mid}.jpg?max_age=2592000`,\n\t\t\t   })\n\t\t   })\n\t\t   // 对象的遍历是无序的，为了对遍历出有顺序的数据，需要对数据进一步处理\n\t\t   const [hot,rest] = [ [],[] ];\n\t\t   for(let key in map){\n\t\t\t   if( map[key].title.match(/[a-zA-Z]/) ){\n\t\t\t\t   rest.push( map[key] )\n\t\t\t   }else if( map[key].title === HOT_NAME ){\n\t\t\t\t   hot.push( map[key] )\n\t\t\t   }\n\t\t   }\n\t\t   // charCodeAt() 方法返回指定位置的字符的unicode编码，这个返回值是0-65535 之间的整数。\n\t\t   // sort 方法会对一个阵列的所有元素进行排序，预设的排序是根据字串的Unicode编码位置而定。\n\t\t   rest.sort((a,b) => {\n\t\t\t   return a.title.charCodeAt(0) - b.title.charCodeAt(0);\n\t\t   })\n\t\t   return hot.concat(rest);\n\t   }\n\t}\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/singer","sourcesContent":["<template>\n\t<div class=\"singer-wrapper\">\n\t\t<ListView :data='singers' @select='handleSelectSinger'></ListView>\n\t\t<router-view></router-view>\n\t</div>\n</template>\n\n<script>\n\timport {getSinger} from '@/common/api/singer'\n\timport {ERR_OK} from '@/common/api/config'\n\timport ListView from '@/base/listview'\n\timport {mapMutations} from 'vuex'\n\t\n\tconst HOT_NAME = '热门歌手',\n\t\t  HOT_NAME_LENGTH = 10;\n\t\n\texport default {\n\t\tname:'singer',\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tsingers:[],\t\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\tthis._getSinger()\n\t\t},\n\t\tcomponents:{ListView},\n\t\tmethods:{\n\t\t\t...mapMutations({\n\t\t\t\t'setSinger':'SET_SINGER'\n\t\t\t}),\n\t\t\thandleSelectSinger(singer){\n\t\t\t\tthis.$router.push(`/singer/${singer.id}`)\n\t\t\t\tthis.setSinger(singer);\n\t\t\t},\n\t\t\t_getSinger(){\n\t\t\t\tgetSinger().then(res => {\n\t\t\t\t\tif(res.code === ERR_OK){\n\t\t\t\t\t\tthis.singers = this._normalizeSinger(res.data.list);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t/*_normalizeSinger(singer){\n\t\t\t\tlet singerList = [];\n\t\t\t\tfor(let i = 0,len = singer.length; i < len; i++ ){\n\t\t\t\t\tif( hasIndex( singer[i].Findex ) ){\n\t\t\t\t\t\tfor(let j = 0; j < singerList.length; j++){\n\t\t\t\t\t\t\tif( singerList[j].Findex === singer[i].Findex ){\n\t\t\t\t\t\t\t\tsingerList[j].list.push(singer[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsingerList.push({Findex:singer[i].Findex,list:[singer[i]]});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction hasIndex(Findex){\n\t\t\t\t\tfor(let i = 0; i < singerList.length; i++){\n\t\t\t\t\t\tif(singerList[i].Findex === Findex){\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tfunction compare(a,b){\n\t\t\t\t\tif(a.Findex < b.Findex) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif(a.Findex > b.Findex){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tsingerList.sort(compare);\n\t\t\t\treturn singerList;\n\t\t\t}\n\t\t\t*/\n\t\t   _normalizeSinger(list){\n\t\t\t   const map = {\n\t\t\t\t   hot:{\n\t\t\t\t\t   title:HOT_NAME,\n\t\t\t\t\t   items:[]\n\t\t\t\t   }\n\t\t\t   }\n\t\t\t   list.forEach( (item,index) => {\n\t\t\t\t   if( index < HOT_NAME_LENGTH ){\n\t\t\t\t\t   map.hot.items.push({\n\t\t\t\t\t\t   name:item.Fsinger_name,\n\t\t\t\t\t\t   id:item.Fsinger_id,\n\t\t\t\t\t\t   singerMid:item.Fsinger_mid,\n\t\t\t\t\t\t   avatar:`https://y.gtimg.cn/music/photo_new/T001R150x150M000${item.Fsinger_mid}.jpg?max_age=2592000`\n\t\t\t\t\t   });\n\t\t\t\t   }\n\t\t\t\t   const key = item.Findex;\n\t\t\t\t   if( !map[key] ){\n\t\t\t\t\t\tmap[key] = {\n\t\t\t\t\t\t\ttitle:key,\n\t\t\t\t\t\t\titems:[]\n\t\t\t\t\t\t}\n\t\t\t\t   }\n\t\t\t\t   map[key].items.push({\n\t\t\t\t\t   name:item.Fsinger_name,\n\t\t\t\t\t   id:item.Fsinger_id,\n\t\t\t\t\t   singerMid:item.Fsinger_mid,\n\t\t\t\t\t   avatar:`https://y.gtimg.cn/music/photo_new/T001R150x150M000${item.Fsinger_mid}.jpg?max_age=2592000`,\n\t\t\t\t   })\n\t\t\t   })\n\t\t\t   // 对象的遍历是无序的，为了对遍历出有顺序的数据，需要对数据进一步处理\n\t\t\t   const [hot,rest] = [ [],[] ];\n\t\t\t   for(let key in map){\n\t\t\t\t   if( map[key].title.match(/[a-zA-Z]/) ){\n\t\t\t\t\t   rest.push( map[key] )\n\t\t\t\t   }else if( map[key].title === HOT_NAME ){\n\t\t\t\t\t   hot.push( map[key] )\n\t\t\t\t   }\n\t\t\t   }\n\t\t\t   // charCodeAt() 方法返回指定位置的字符的unicode编码，这个返回值是0-65535 之间的整数。\n\t\t\t   // sort 方法会对一个阵列的所有元素进行排序，预设的排序是根据字串的Unicode编码位置而定。\n\t\t\t   rest.sort((a,b) => {\n\t\t\t\t   return a.title.charCodeAt(0) - b.title.charCodeAt(0);\n\t\t\t   })\n\t\t\t   return hot.concat(rest);\n\t\t   }\n\t\t}\n\t}\n</script>\n\n<style lang='scss' scoped>\n\t.singer-wrapper{\n\t\tposition:fixed;\n\t\ttop:78px;\n\t\tbottom:0;\n\t\twidth:100%;\n\t}\n</style>\n"]}]}
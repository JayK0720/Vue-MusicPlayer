{"remainingRequest":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js!/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jinkang/Desktop/Vue-MusicPlayer/src/views/singer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/src/views/singer/index.vue","mtime":1570533157654},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\nimport { getSinger } from '@/common/api/singer';\nimport { ERR_OK } from '@/common/api/config';\nimport ListView from '@/base/listview';\nimport { mapMutations } from 'vuex';\nvar HOT_NAME = '热门歌手',\n    HOT_NAME_LENGTH = 10;\nexport default {\n  name: 'singer',\n  data: function data() {\n    return {\n      singers: []\n    };\n  },\n  created: function created() {\n    this._getSinger();\n  },\n  components: {\n    ListView: ListView\n  },\n  methods: _objectSpread({}, mapMutations({\n    'setSinger': 'SET_SINGER'\n  }), {\n    handleSelectSinger: function handleSelectSinger(singer) {\n      this.$router.push(\"/singer/\".concat(singer.id));\n      this.setSinger(singer);\n    },\n    _getSinger: function _getSinger() {\n      var _this = this;\n\n      getSinger().then(function (res) {\n        if (res.code === ERR_OK) {\n          _this.singers = _this._normalizeSinger(res.data.list);\n        }\n      });\n    },\n\n    /*_normalizeSinger(singer){\n    \tlet singerList = [];\n    \tfor(let i = 0,len = singer.length; i < len; i++ ){\n    \t\tif( hasIndex( singer[i].Findex ) ){\n    \t\t\tfor(let j = 0; j < singerList.length; j++){\n    \t\t\t\tif( singerList[j].Findex === singer[i].Findex ){\n    \t\t\t\t\tsingerList[j].list.push(singer[i]);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}else{\n    \t\t\tsingerList.push({Findex:singer[i].Findex,list:[singer[i]]});\n    \t\t}\n    \t}\n    \tfunction hasIndex(Findex){\n    \t\tfor(let i = 0; i < singerList.length; i++){\n    \t\t\tif(singerList[i].Findex === Findex){\n    \t\t\t\treturn true;\n    \t\t\t}\n    \t\t}\n    \t\treturn false;\n    \t}\n    \tfunction compare(a,b){\n    \t\tif(a.Findex < b.Findex) {\n    \t\t\treturn -1;\n    \t\t}\n    \t\tif(a.Findex > b.Findex){\n    \t\t\treturn 1;\n    \t\t}\n    \t\treturn 0;\n    \t}\n    \tsingerList.sort(compare);\n    \treturn singerList;\n    }\n    */\n    _normalizeSinger: function _normalizeSinger(list) {\n      var map = {\n        hot: {\n          title: HOT_NAME,\n          items: []\n        }\n      };\n      list.forEach(function (item, index) {\n        if (index < HOT_NAME_LENGTH) {\n          map.hot.items.push({\n            name: item.Fsinger_name,\n            id: item.Fsinger_id,\n            singerMid: item.Fsinger_mid,\n            avatar: \"https://y.gtimg.cn/music/photo_new/T001R150x150M000\".concat(item.Fsinger_mid, \".jpg?max_age=2592000\")\n          });\n        }\n\n        var key = item.Findex;\n\n        if (!map[key]) {\n          map[key] = {\n            title: key,\n            items: []\n          };\n        }\n\n        map[key].items.push({\n          name: item.Fsinger_name,\n          id: item.Fsinger_id,\n          singerMid: item.Fsinger_mid,\n          avatar: \"https://y.gtimg.cn/music/photo_new/T001R150x150M000\".concat(item.Fsinger_mid, \".jpg?max_age=2592000\")\n        });\n      }); // 对象的遍历是无序的，为了对遍历出有顺序的数据，需要对数据进一步处理\n\n      var hot = [],\n          rest = [];\n\n      for (var key in map) {\n        if (map[key].title.match(/[a-zA-Z]/)) {\n          rest.push(map[key]);\n        } else if (map[key].title === HOT_NAME) {\n          hot.push(map[key]);\n        }\n      } // charCodeAt() 方法返回指定位置的字符的unicode编码，这个返回值是0-65535 之间的整数。\n      // sort 方法会对一个阵列的所有元素进行排序，预设的排序是根据字串的Unicode编码位置而定。\n\n\n      rest.sort(function (a, b) {\n        return a.title.charCodeAt(0) - b.title.charCodeAt(0);\n      });\n      return hot.concat(rest);\n    }\n  })\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div class=\"singer-wrapper\">\n\t\t<ListView :data='singers' @select='handleSelectSinger'></ListView>\n\t\t<router-view></router-view>\n\t</div>\n</template>\n\n<script>\n\timport {getSinger} from '@/common/api/singer'\n\timport {ERR_OK} from '@/common/api/config'\n\timport ListView from '@/base/listview'\n\timport {mapMutations} from 'vuex'\n\t\n\tconst HOT_NAME = '热门歌手',\n\t\t  HOT_NAME_LENGTH = 10;\n\t\n\texport default {\n\t\tname:'singer',\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tsingers:[],\t\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\tthis._getSinger()\n\t\t},\n\t\tcomponents:{ListView},\n\t\tmethods:{\n\t\t\t...mapMutations({\n\t\t\t\t'setSinger':'SET_SINGER'\n\t\t\t}),\n\t\t\thandleSelectSinger(singer){\n\t\t\t\tthis.$router.push(`/singer/${singer.id}`)\n\t\t\t\tthis.setSinger(singer);\n\t\t\t},\n\t\t\t_getSinger(){\n\t\t\t\tgetSinger().then(res => {\n\t\t\t\t\tif(res.code === ERR_OK){\n\t\t\t\t\t\tthis.singers = this._normalizeSinger(res.data.list);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t/*_normalizeSinger(singer){\n\t\t\t\tlet singerList = [];\n\t\t\t\tfor(let i = 0,len = singer.length; i < len; i++ ){\n\t\t\t\t\tif( hasIndex( singer[i].Findex ) ){\n\t\t\t\t\t\tfor(let j = 0; j < singerList.length; j++){\n\t\t\t\t\t\t\tif( singerList[j].Findex === singer[i].Findex ){\n\t\t\t\t\t\t\t\tsingerList[j].list.push(singer[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsingerList.push({Findex:singer[i].Findex,list:[singer[i]]});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction hasIndex(Findex){\n\t\t\t\t\tfor(let i = 0; i < singerList.length; i++){\n\t\t\t\t\t\tif(singerList[i].Findex === Findex){\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tfunction compare(a,b){\n\t\t\t\t\tif(a.Findex < b.Findex) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif(a.Findex > b.Findex){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tsingerList.sort(compare);\n\t\t\t\treturn singerList;\n\t\t\t}\n\t\t\t*/\n\t\t   _normalizeSinger(list){\n\t\t\t   const map = {\n\t\t\t\t   hot:{\n\t\t\t\t\t   title:HOT_NAME,\n\t\t\t\t\t   items:[]\n\t\t\t\t   }\n\t\t\t   }\n\t\t\t   list.forEach( (item,index) => {\n\t\t\t\t   if( index < HOT_NAME_LENGTH ){\n\t\t\t\t\t   map.hot.items.push({\n\t\t\t\t\t\t   name:item.Fsinger_name,\n\t\t\t\t\t\t   id:item.Fsinger_id,\n\t\t\t\t\t\t   singerMid:item.Fsinger_mid,\n\t\t\t\t\t\t   avatar:`https://y.gtimg.cn/music/photo_new/T001R150x150M000${item.Fsinger_mid}.jpg?max_age=2592000`\n\t\t\t\t\t   });\n\t\t\t\t   }\n\t\t\t\t   const key = item.Findex;\n\t\t\t\t   if( !map[key] ){\n\t\t\t\t\t\tmap[key] = {\n\t\t\t\t\t\t\ttitle:key,\n\t\t\t\t\t\t\titems:[]\n\t\t\t\t\t\t}\n\t\t\t\t   }\n\t\t\t\t   map[key].items.push({\n\t\t\t\t\t   name:item.Fsinger_name,\n\t\t\t\t\t   id:item.Fsinger_id,\n\t\t\t\t\t   singerMid:item.Fsinger_mid,\n\t\t\t\t\t   avatar:`https://y.gtimg.cn/music/photo_new/T001R150x150M000${item.Fsinger_mid}.jpg?max_age=2592000`,\n\t\t\t\t   })\n\t\t\t   })\n\t\t\t   // 对象的遍历是无序的，为了对遍历出有顺序的数据，需要对数据进一步处理\n\t\t\t   const [hot,rest] = [ [],[] ];\n\t\t\t   for(let key in map){\n\t\t\t\t   if( map[key].title.match(/[a-zA-Z]/) ){\n\t\t\t\t\t   rest.push( map[key] )\n\t\t\t\t   }else if( map[key].title === HOT_NAME ){\n\t\t\t\t\t   hot.push( map[key] )\n\t\t\t\t   }\n\t\t\t   }\n\t\t\t   // charCodeAt() 方法返回指定位置的字符的unicode编码，这个返回值是0-65535 之间的整数。\n\t\t\t   // sort 方法会对一个阵列的所有元素进行排序，预设的排序是根据字串的Unicode编码位置而定。\n\t\t\t   rest.sort((a,b) => {\n\t\t\t\t   return a.title.charCodeAt(0) - b.title.charCodeAt(0);\n\t\t\t   })\n\t\t\t   return hot.concat(rest);\n\t\t   }\n\t\t}\n\t}\n</script>\n\n<style lang='scss' scoped>\n\t.singer-wrapper{\n\t\tposition:fixed;\n\t\ttop:78px;\n\t\tbottom:0;\n\t\twidth:100%;\n\t}\n</style>\n"],"sourceRoot":"src/views/singer"}]}
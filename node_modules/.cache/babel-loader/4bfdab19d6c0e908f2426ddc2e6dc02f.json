{"remainingRequest":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js!/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jinkang/Desktop/Vue-MusicPlayer/src/components/player/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/src/components/player/index.vue","mtime":1573979434772},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations } from 'vuex';\nimport ProgressBar from '@/base/progress-bar';\nimport { playMode } from '@/common/js/config';\nimport { shuffle } from '@/common/js/util.js';\nimport Lyric from 'lyric-parser';\nimport { prefixStyle } from '@/common/js/dom';\nimport Scroll from '@/base/scroll';\nimport Loading from '@/base/loading';\nvar transform = prefixStyle('transform');\nvar transitionDuration = prefixStyle('transitionDuration');\nvar TIME = 250;\nvar HEIGHT = 32;\nexport default {\n  name: 'player',\n  data: function data() {\n    return {\n      flag: false,\n      currentTime: 0,\n      currentLyric: null,\n      currentPage: 'cd',\n      number: -1\n    };\n  },\n  components: {\n    ProgressBar: ProgressBar,\n    Scroll: Scroll,\n    Loading: Loading\n  },\n  computed: _objectSpread({}, mapGetters(['fullScreen', 'playList', 'currentSong', 'playing', 'currentIndex', 'mode', 'sequenceList']), {\n    cdClass: function cdClass() {\n      return this.playing ? 'play' : 'pause';\n    },\n    percent: function percent() {\n      return this.currentTime / this.currentSong.duration;\n    }\n  }),\n  created: function created() {\n    this.touch = {};\n  },\n  methods: _objectSpread({}, mapMutations({\n    foldFullScreen: 'SET_FULL_SCREEN',\n    setPlayingState: 'SET_PLAYING',\n    setCurrentIndex: 'SET_CURRENT_INDEX',\n    setPlayMode: 'SET_MODE',\n    setPlayList: 'SET_PLAY_LIST'\n  }), {\n    handleFold: function handleFold() {\n      this.foldFullScreen(false);\n    },\n    handleTogglePlaying: function handleTogglePlaying() {\n      if (!this.flag) return; // playing 是getters里获取到的playing 状态, 点击播放按钮切换播放状态\n\n      this.setPlayingState(!this.playing);\n    },\n    handlePrev: function handlePrev() {\n      // 点击播放上一首\n      if (!this.flag) {\n        this.setPlayingState(false);\n        return;\n      }\n\n      if (this.playList.length === 1) {\n        this.loop();\n      } else {\n        var index = this.currentIndex - 1;\n\n        if (index === -1) {\n          index = this.playList.length - 1;\n        }\n\n        this.setCurrentIndex(index);\n        this.setPlayingState(true);\n      }\n\n      this.flag = false;\n    },\n    handleNext: function handleNext() {\n      if (!this.flag) {\n        this.setPlayingState(false);\n        return;\n      }\n      /*\n      点击播放下一首,当index改变的时候,currentSong就会修改\n      如果播放列表只有一条歌曲,那么点击下一曲的时候,currentSong不会修改，此时调用loop方法\n      */\n\n\n      if (this.playList.length === 1) {\n        this.loop();\n      } else {\n        var index = this.currentIndex + 1;\n\n        if (index === this.playList.length) {\n          index = 0;\n        }\n\n        this.setCurrentIndex(index);\n        this.setPlayingState(true);\n      }\n\n      this.flag = false;\n    },\n    handleSliderEnd: function handleSliderEnd(percent) {\n      var currentTime = percent * this.currentSong.duration;\n      this.$refs.audio.currentTime = currentTime;\n\n      if (!this.playing) {\n        this.setPlayingState(true);\n      }\n\n      this.number = 0;\n\n      var _this = this;\n\n      (function skip() {\n        if (_this.number > _this.currentLyric.lines.length - 1) return;\n\n        if (currentTime * 1000 > _this.currentLyric.lines[_this.number].time) {\n          _this.number++;\n          skip();\n        }\n      })();\n    },\n    end: function end() {\n      if (this.mode === playMode.loop) {\n        this.loop();\n        this.$refs.left.style['top'] = 0;\n        this.number = -1;\n      } else {\n        this.handleNext();\n      }\n    },\n    loop: function loop() {\n      this.$refs.audio.currentTime = 0;\n      this.$refs.audio.play();\n    },\n\n    /*\n    在切换歌曲播放模式的时候,当前播放的歌曲在新的播放列表里的位置已经修改了，找到此时播放歌曲在新的播放列表里的位置,然后\n    修改index.\n    \n    todo:1\n    1. 点击歌曲的时候，设置了当前的播放列表 playList 以及 sequenceList, currentIndex, currentSong 来自playList[currentIndex]\n    2. 当切换播放模式为随机播放的时候, 修改了playList, 此时playList 和 循环列表播放的playList 不同\n    3. 切换播放模式后，再次点击播放列表里的歌曲时,比如点击的为第1首歌曲,由于playList已经修改，此时的currentSong 和 渲染的播放列表歌曲不同。\n    \n    todo:2 此时切换歌曲的时候,由于播放歌曲列表已经为顺序播放，此时点击 上一曲 或者 下一曲的时候, 又变成了顺序播放\n    */\n    handleCheckPlayMode: function handleCheckPlayMode() {\n      var mode = (this.mode + 1) % 3;\n      this.setPlayMode(mode);\n      var list = [];\n\n      if (this.mode === playMode.random) {\n        /*\n        传入this.sequenceList后，返回的list 为打乱后的数组，此时this.sequenceList本身也被修改了.\n        当从随机模式切换为顺序播放或者单曲循环的时候,this.sequenceList还是为打乱后的列表而不是原始数据。\n        所以在shuffle函数内部,不能直接修改this.sequenceList\n        */\n        list = shuffle(this.sequenceList);\n      } else {\n        list = this.sequenceList;\n      }\n\n      this.resetIndex(list);\n      this.setPlayList(list);\n    },\n    resetIndex: function resetIndex(list) {\n      var _this2 = this;\n\n      var index = list.findIndex(function (item) {\n        return item.songid === _this2.currentSong.songid;\n      });\n      this.setCurrentIndex(index);\n    },\n    getLyric: function getLyric() {\n      var _this3 = this;\n\n      this.currentSong.getLyric().then(function (lyric) {\n        // let currentLyric = this.formatLyric(lyric);\n        _this3.currentLyric = new Lyric(lyric);\n      });\n    },\n    ready: function ready() {\n      this.flag = true;\n    },\n    error: function error() {\n      this.flag = true;\n    },\n    timeupdate: function timeupdate(e) {\n      this.currentTime = e.target.currentTime;\n\n      if (this.currentLyric) {\n        if (this.number >= this.currentLyric.lines.length - 1) return;\n\n        if (e.target.currentTime * 1000 >= this.currentLyric.lines[this.number + 1].time) {\n          this.number++;\n        }\n\n        if (this.number > 6) {\n          var offsetY = -HEIGHT * (this.number - 6);\n          this.$refs.lyricWrapper.style['top'] = \"\".concat(offsetY, \"px\");\n        } else {\n          this.$refs.lyricWrapper.style['top'] = '0px';\n        }\n\n        this.$refs.lyricWrapper.style[transitionDuration] = \"\".concat(TIME, \"ms\");\n      }\n    },\n    format: function format(interval) {\n      var minute = Math.floor(interval / 60);\n      var second = this.padzero(interval % 60 | 0);\n      return \"\".concat(minute, \":\").concat(second);\n    },\n    padzero: function padzero(num) {\n      var length = num.toString().length;\n      return ('00' + num).substring(length);\n    },\n    formatLyric: function formatLyric(lyric) {\n      var _this4 = this;\n\n      var arr = lyric.split('\\n');\n      var lyricArr = [];\n      arr.forEach(function (item) {\n        var temp = item.split(']');\n        var time = temp[0].slice(1);\n        var text = temp[1];\n        lyricArr.push({\n          time: _this4.formatLyricTime(time),\n          text: text\n        });\n      });\n      return lyricArr;\n    },\n    handleSlideStart: function handleSlideStart(e) {\n      this.touch.initial = true;\n      this.touch.startX = e.touches[0].pageX;\n      this.touch.startY = e.touches[0].pageY;\n    },\n    handleSlideMove: function handleSlideMove(e) {\n      if (!this.touch.initial) return;\n      var delX = e.touches[0].pageX - this.touch.startX;\n      var delY = e.touches[0].pageY - this.touch.startY;\n      /*\n      如果当前页是歌词页面,且竖向滚动的距离大于横向滚动的距离时，此时不切换页面。\n      */\n\n      if (Math.abs(delY) > Math.abs(delX)) return;\n      var currentLeft = this.currentPage === 'cd' ? 0 : -window.innerWidth;\n      var offsetWidth = Math.min(0, Math.max(-window.innerWidth, currentLeft + delX));\n      this.touch.percent = Math.abs(offsetWidth / window.innerWidth);\n      this.$refs.lyric.style[transform] = \"translate3d(\".concat(offsetWidth, \"px,0,0)\");\n      this.$refs.lyric.style[transitionDuration] = '0ms'; // 向左滑动的时候 改变cd的透明度\n\n      this.$refs.left.style['opacity'] = 1 - this.touch.percent;\n      this.$refs.left.style[transitionDuration] = \"\".concat(TIME, \"ms\");\n    },\n    handleSlideEnd: function handleSlideEnd() {\n      /*\n      滑动结束的时候停在哪里？从右往左滑, 如果滑动的距离 大于 屏幕宽度的 30%，则直接显示歌词页面\n      */\n      var offsetWidth = 0;\n      var opacity = 0;\n\n      if (this.currentPage === 'cd') {\n        if (this.touch.percent >= 0.3) {\n          offsetWidth = -window.innerWidth;\n          this.currentPage = 'lyric';\n          opacity = 0;\n        } else {\n          offsetWidth = 0;\n          opacity = 1;\n        }\n      } else {\n        if (this.touch.percent <= 0.7) {\n          offsetWidth = 0;\n          this.currentPage = 'cd';\n          opacity = 1;\n        } else {\n          offsetWidth = -window.innerWidth;\n          opacity = 0;\n        }\n      }\n\n      this.$refs.lyric.style[transform] = \"translate3d(\".concat(offsetWidth, \"px,0,0)\");\n      this.$refs.lyric.style[transitionDuration] = \"\".concat(TIME, \"ms\");\n      this.$refs.left.style['opacity'] = opacity;\n    }\n  }),\n  watch: {\n    currentSong: function currentSong(newSong, oldSong) {\n      var _this5 = this;\n\n      if (newSong.songmid === oldSong.songmid) {\n        this.$refs.audio.currentTime = 0;\n      }\n\n      this.$nextTick(function () {\n        _this5.$refs.audio.play();\n\n        _this5.getLyric();\n\n        _this5.number = -1;\n      });\n    },\n    playing: function playing(state) {\n      var _this6 = this;\n\n      this.$nextTick(function () {\n        var audio = _this6.$refs.audio;\n        state ? audio.play() : audio.pause();\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div class=\"player\" v-show='playList.length > 0'>\n\t\t<transition name='slide'>\n\t\t\t<div class=\"full-screen-player\" v-show='fullScreen'>\n\t\t\t\t<div class=\"player-background\">\n\t\t\t\t\t<img v-bind:src=\"currentSong.image\" alt=\"\" width='100%' height='100%'>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"top\">\n\t\t\t\t\t<div class=\"arrow-down\" @touchstart.stop='handleFold'>\n\t\t\t\t\t\t<i class=\"iconfont\">&#xe721;</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h1 class=\"song-name\">{{currentSong.songname}}</h1>\n\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t<i class=\"iconfont\">&#xe610;</i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"middle\"\n\t\t\t\t\t@touchstart.prevent='handleSlideStart'\n\t\t\t\t\t@touchmove.prevent='handleSlideMove'\n\t\t\t\t\t@touchend='handleSlideEnd'\n\t\t\t\t>\n\t\t\t\t\t<div class=\"slide-left\" ref='left'>\n\t\t\t\t\t\t<div class=\"singer-name\">\n\t\t\t\t\t\t\t<p class='text'>{{currentSong.singer}}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"cd-wrapper\">\n\t\t\t\t\t\t\t<div class=\"cd\" :class='cdClass'>\n\t\t\t\t\t\t\t\t<img v-lazy=\"currentSong.image\" :alt=\"currentSong.songname\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"slide-right\" ref='lyric'>\n\t\t\t\t\t\t<template v-if='currentLyric'>\n\t\t\t\t\t\t\t<div class=\"lyric-wrapper\" ref='lyricWrapper'>\n\t\t\t\t\t\t\t\t<template v-if='currentLyric.lines.length'>\n\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\tv-for='(item,index) in currentLyric.lines'\n\t\t\t\t\t\t\t\t\t\tclass='lyric-text'\n\t\t\t\t\t\t\t\t\t\t:class='{active: number === index}'\n\t\t\t\t\t\t\t\t\t>{{item.txt}}</p>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t\t\t\t<p>暂无歌词</p>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<Loading v-show=\"(currentPage === 'lyric') && !currentLyric \"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bottom\">\n\t\t\t\t\t<div class=\"dot-wrapper\">\n\t\t\t\t\t\t<span class=\"dot\" :class=\"{active:currentPage === 'cd'}\"></span>\n\t\t\t\t\t\t<span class=\"dot\" :class=\"{active:currentPage === 'lyric'}\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"progress-wrap\">\n\t\t\t\t\t\t<span class=\"current time\">{{format(currentTime)}}</span>\n\t\t\t\t\t\t<div class=\"progress-bar\">\n\t\t\t\t\t\t\t<ProgressBar :percent='percent' @percentChange='handleSliderEnd'/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span class=\"total time\">{{format(currentSong.duration)}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"operator-wrap\">\n\t\t\t\t\t\t<div class=\"mode\" @click.prevent='handleCheckPlayMode'>\n\t\t\t\t\t\t\t<i class=\"iconfont\" v-if='mode===0'>&#xe674;</i>\n\t\t\t\t\t\t\t<i class=\"iconfont\" v-else-if='mode===1'>&#xe622;</i>\n\t\t\t\t\t\t\t<i class=\"iconfont\" v-else='mode===2'>&#xe612;</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"prev\" @click='handlePrev'>\n\t\t\t\t\t\t\t<i class=\"iconfont\">&#xe602;</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"play\" @click='handleTogglePlaying'>\n\t\t\t\t\t\t\t<template v-if='!playing'>\n\t\t\t\t\t\t\t\t<i class=\"iconfont\">&#xe652;</i>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t\t\t<i class=\"iconfont\">&#xe603;</i>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"next\" @click='handleNext'>\n\t\t\t\t\t\t\t<i class=\"iconfont\">&#xe619;</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"collect\">\n\t\t\t\t\t\t\t<i class=\"iconfont\">&#xe61a;</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</transition>\n\t\t<audio \n\t\t\tv-bind:src=\"currentSong.url\" \n\t\t\tref='audio'\n\t\t\t@canplay='ready'\n\t\t\t@error='error'\n\t\t\t@timeupdate='timeupdate'\n\t\t\t@ended='end'\n\t\t></audio>\n\t</div>\n</template>\n\n<script>\n\timport {mapGetters,mapMutations} from 'vuex'\n\timport ProgressBar from '@/base/progress-bar'\n\timport {playMode} from '@/common/js/config'\n\timport {shuffle} from '@/common/js/util.js'\n\timport Lyric from 'lyric-parser'\n\timport {prefixStyle} from '@/common/js/dom'\n\timport Scroll from '@/base/scroll'\n\timport Loading from '@/base/loading'\n\tlet transform = prefixStyle('transform')\n\tlet transitionDuration = prefixStyle('transitionDuration');\n\tconst TIME = 250;\n\tconst HEIGHT = 32;\n\texport default{\n\t\tname:'player',\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tflag:false,\n\t\t\t\tcurrentTime:0,\n\t\t\t\tcurrentLyric:null,\n\t\t\t\tcurrentPage:'cd',\n\t\t\t\tnumber:-1\n\t\t\t}\n\t\t},\n\t\tcomponents:{ProgressBar,Scroll,Loading},\n\t\tcomputed:{\n\t\t\t...mapGetters([\n\t\t\t\t\t'fullScreen',\n\t\t\t\t\t'playList',\n\t\t\t\t\t'currentSong',\n\t\t\t\t\t'playing',\n\t\t\t\t\t'currentIndex',\n\t\t\t\t\t'mode',\n\t\t\t\t\t'sequenceList'\n\t\t\t\t]),\n\t\t\tcdClass(){\n\t\t\t\treturn this.playing? 'play' : 'pause'\n\t\t\t},\n\t\t\tpercent(){\n\t\t\t\treturn this.currentTime / this.currentSong.duration;\n\t\t\t},\n\t\t},\n\t\tcreated(){\n\t\t\tthis.touch = {}\n\t\t},\n\t\tmethods:{\n\t\t\t...mapMutations({\n\t\t\t\tfoldFullScreen:'SET_FULL_SCREEN',\n\t\t\t\tsetPlayingState:'SET_PLAYING',\n\t\t\t\tsetCurrentIndex:'SET_CURRENT_INDEX',\n\t\t\t\tsetPlayMode:'SET_MODE',\n\t\t\t\tsetPlayList:'SET_PLAY_LIST'\n\t\t\t}),\n\t\t\thandleFold(){\n\t\t\t\tthis.foldFullScreen(false);\n\t\t\t},\n\t\t\thandleTogglePlaying(){\n\t\t\t\tif(!this.flag) return;\n\t\t\t\t// playing 是getters里获取到的playing 状态, 点击播放按钮切换播放状态\n\t\t\t\tthis.setPlayingState(!this.playing);\n\t\t\t},\n\t\t\thandlePrev(){\n\t\t\t\t// 点击播放上一首\n\t\t\t\tif(!this.flag){\n\t\t\t\t\tthis.setPlayingState(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(this.playList.length === 1){\n\t\t\t\t\tthis.loop();\n\t\t\t\t}else{\n\t\t\t\t\tlet index = this.currentIndex - 1;\n\t\t\t\t\tif(index === -1){\n\t\t\t\t\t\tindex = this.playList.length - 1;\n\t\t\t\t\t}\n\t\t\t\t\tthis.setCurrentIndex(index);\n\t\t\t\t\tthis.setPlayingState(true);\t\n\t\t\t\t}\n\t\t\t\tthis.flag = false;\n\t\t\t},\n\t\t\thandleNext(){\n\t\t\t\tif(!this.flag) {\n\t\t\t\t\tthis.setPlayingState(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t点击播放下一首,当index改变的时候,currentSong就会修改\n\t\t\t\t如果播放列表只有一条歌曲,那么点击下一曲的时候,currentSong不会修改，此时调用loop方法\n\t\t\t\t*/ \n\t\t\t   if(this.playList.length === 1) {\n\t\t\t\t   this.loop();\n\t\t\t   }else{\n\t\t\t\t   let index = this.currentIndex + 1;\n\t\t\t\t   if(index === this.playList.length){\n\t\t\t\t   \tindex = 0;\n\t\t\t\t   }\n\t\t\t\t   this.setCurrentIndex(index);\n\t\t\t\t   this.setPlayingState(true);\n\t\t\t   }\n\t\t\t\tthis.flag = false;\n\t\t\t},\n\t\t\thandleSliderEnd(percent){\n\t\t\t\tlet currentTime = percent * this.currentSong.duration;\n\t\t\t\tthis.$refs.audio.currentTime = currentTime;\n\t\t\t\tif(!this.playing){\n\t\t\t\t\tthis.setPlayingState(true);\n\t\t\t\t}\n\t\t\t\tthis.number = 0;\n\t\t\t\tconst _this = this;\n\t\t\t\t(function skip(){\n\t\t\t\t\tif(_this.number > _this.currentLyric.lines.length -1) return;\n\t\t\t\t\tif(currentTime*1000 > _this.currentLyric.lines[_this.number].time){\n\t\t\t\t\t\t_this.number++;\n\t\t\t\t\t\tskip();\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\tend(){\n\t\t\t\tif(this.mode === playMode.loop){\n\t\t\t\t\tthis.loop();\n\t\t\t\t\tthis.$refs.left.style['top'] = 0;\n\t\t\t\t\tthis.number = -1;\n\t\t\t\t}else{\n\t\t\t\t\tthis.handleNext();\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(){\n\t\t\t\tthis.$refs.audio.currentTime = 0;\n\t\t\t\tthis.$refs.audio.play();\n\t\t\t},\n\t\t\t/*\n\t\t\t在切换歌曲播放模式的时候,当前播放的歌曲在新的播放列表里的位置已经修改了，找到此时播放歌曲在新的播放列表里的位置,然后\n\t\t\t修改index.\n\t\t\t\n\t\t\ttodo:1\n\t\t\t1. 点击歌曲的时候，设置了当前的播放列表 playList 以及 sequenceList, currentIndex, currentSong 来自playList[currentIndex]\n\t\t\t2. 当切换播放模式为随机播放的时候, 修改了playList, 此时playList 和 循环列表播放的playList 不同\n\t\t\t3. 切换播放模式后，再次点击播放列表里的歌曲时,比如点击的为第1首歌曲,由于playList已经修改，此时的currentSong 和 渲染的播放列表歌曲不同。\n\t\t\t\n\t\t\ttodo:2 此时切换歌曲的时候,由于播放歌曲列表已经为顺序播放，此时点击 上一曲 或者 下一曲的时候, 又变成了顺序播放\n\t\t\t*/\n\t\t\thandleCheckPlayMode(){\n\t\t\t\tconst mode = (this.mode + 1)%3;\n\t\t\t\tthis.setPlayMode(mode);\n\t\t\t\tlet list = [];\n\t\t\t\tif(this.mode === playMode.random){\n\t\t\t\t\t/*\n\t\t\t\t\t传入this.sequenceList后，返回的list 为打乱后的数组，此时this.sequenceList本身也被修改了.\n\t\t\t\t\t当从随机模式切换为顺序播放或者单曲循环的时候,this.sequenceList还是为打乱后的列表而不是原始数据。\n\t\t\t\t\t所以在shuffle函数内部,不能直接修改this.sequenceList\n\t\t\t\t\t*/\n\t\t\t\t\tlist = shuffle(this.sequenceList);\n\t\t\t\t}else{\n\t\t\t\t\tlist = this.sequenceList;\n\t\t\t\t}\n\t\t\t\tthis.resetIndex(list);\n\t\t\t\tthis.setPlayList(list);\n\t\t\t},\n\t\t\tresetIndex(list){\n\t\t\t\tconst index = list.findIndex((item) => {\n\t\t\t\t\treturn item.songid === this.currentSong.songid;\n\t\t\t\t});\n\t\t\t\tthis.setCurrentIndex(index);\n\t\t\t},\n\t\t\tgetLyric(){\n\t\t\t\tthis.currentSong.getLyric().then(lyric => {\n\t\t\t\t\t// let currentLyric = this.formatLyric(lyric);\n\t\t\t\t\tthis.currentLyric = new Lyric(lyric);\n\t\t\t\t})\n\t\t\t},\n\t\t\tready(){\n\t\t\t\tthis.flag = true;\n\t\t\t},\n\t\t\terror(){\n\t\t\t\tthis.flag = true;\n\t\t\t},\n\t\t\ttimeupdate(e){\n\t\t\t\tthis.currentTime = e.target.currentTime;\n\t\t\t\tif(this.currentLyric){\n\t\t\t\t\tif(this.number >= this.currentLyric.lines.length-1) return;\n\t\t\t\t\tif(e.target.currentTime*1000 >= this.currentLyric.lines[this.number+1].time){\n\t\t\t\t\t\tthis.number++;\n\t\t\t\t\t}\n\t\t\t\t\tif(this.number > 6){\n\t\t\t\t\t\tlet offsetY = - HEIGHT * (this.number - 6);\n\t\t\t\t\t\tthis.$refs.lyricWrapper.style['top'] = `${offsetY}px`;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.$refs.lyricWrapper.style['top'] = '0px';\n\t\t\t\t\t}\n\t\t\t\t\tthis.$refs.lyricWrapper.style[transitionDuration] = `${TIME}ms`;\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tformat(interval){\n\t\t\t\tlet minute = Math.floor(interval / 60);\n\t\t\t\tlet second = this.padzero(interval % 60 | 0 );\n\t\t\t\treturn `${minute}:${second}`;\n\t\t\t},\n\t\t\tpadzero(num){\n\t\t\t\tlet length = num.toString().length;\n\t\t\t\treturn ('00' + num).substring(length);\n\t\t\t},\n\t\t\tformatLyric(lyric){\n\t\t\t\tlet arr = lyric.split('\\n');\n\t\t\t\tconst lyricArr = [];\n\t\t\t\tarr.forEach((item) => {\n\t\t\t\t\tlet temp = item.split(']');\n\t\t\t\t\tlet time = temp[0].slice(1);\n\t\t\t\t\tlet text = temp[1];\n\t\t\t\t\tlyricArr.push({\n\t\t\t\t\t\ttime:this.formatLyricTime(time),\n\t\t\t\t\t\ttext\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\treturn lyricArr\n\t\t\t},\n\t\t\thandleSlideStart(e){\n\t\t\t\tthis.touch.initial = true;\n\t\t\t\tthis.touch.startX = e.touches[0].pageX;\n\t\t\t\tthis.touch.startY = e.touches[0].pageY;\n\t\t\t},\n\t\t\thandleSlideMove(e){\n\t\t\t\tif(!this.touch.initial) return;\n\t\t\t\tlet delX = e.touches[0].pageX - this.touch.startX;\n\t\t\t\tlet delY = e.touches[0].pageY - this.touch.startY;\n\t\t\t\t/*\n\t\t\t\t如果当前页是歌词页面,且竖向滚动的距离大于横向滚动的距离时，此时不切换页面。\n\t\t\t\t*/\n\t\t\t\tif( Math.abs(delY) > Math.abs(delX) ) return;\n\t\t\t\tconst currentLeft = this.currentPage === 'cd' ? 0 : -window.innerWidth;\n\t\t\t\tlet offsetWidth = Math.min(0,Math.max(-window.innerWidth,currentLeft + delX));\n\t\t\t\tthis.touch.percent = Math.abs( offsetWidth / window.innerWidth );\n\t\t\t\tthis.$refs.lyric.style[transform] = `translate3d(${offsetWidth}px,0,0)`;\n\t\t\t\tthis.$refs.lyric.style[transitionDuration] = '0ms';\n\t\t\t\t\n\t\t\t\t// 向左滑动的时候 改变cd的透明度\n\t\t\t\tthis.$refs.left.style['opacity'] = 1 - this.touch.percent;\n\t\t\t\tthis.$refs.left.style[transitionDuration] = `${TIME}ms`;\n\t\t\t},\n\t\t\thandleSlideEnd(){\n\t\t\t\t/*\n\t\t\t\t滑动结束的时候停在哪里？从右往左滑, 如果滑动的距离 大于 屏幕宽度的 30%，则直接显示歌词页面\n\t\t\t\t*/\n\t\t\t   let offsetWidth = 0;\n\t\t\t   let opacity = 0;\n\t\t\t   if(this.currentPage === 'cd'){\n\t\t\t\t   if(this.touch.percent >= 0.3){\n\t\t\t\t\t   offsetWidth = -window.innerWidth;\n\t\t\t\t\t   this.currentPage = 'lyric'\n\t\t\t\t\t   opacity = 0\n\t\t\t\t   }else{\n\t\t\t\t\t   offsetWidth = 0;\n\t\t\t\t\t   opacity = 1;\n\t\t\t\t   }\n\t\t\t   }else{\n\t\t\t\t   if(this.touch.percent <= 0.7){\n\t\t\t\t\t   offsetWidth = 0;\n\t\t\t\t\t   this.currentPage = 'cd';\n\t\t\t\t\t   opacity = 1;\n\t\t\t\t   }else{\n\t\t\t\t\t   offsetWidth = -window.innerWidth;\n\t\t\t\t\t   opacity = 0;\n\t\t\t\t   }\n\t\t\t   }\n\t\t\t   this.$refs.lyric.style[transform] = `translate3d(${offsetWidth}px,0,0)`;\n\t\t\t   this.$refs.lyric.style[transitionDuration] = `${TIME}ms`;\n\t\t\t   this.$refs.left.style['opacity'] = opacity;\n\t\t\t}\n\t\t},\n\t\twatch:{\n\t\t\tcurrentSong(newSong,oldSong){\n\t\t\t\tif(newSong.songmid === oldSong.songmid){\n\t\t\t\t\tthis.$refs.audio.currentTime = 0;\n\t\t\t\t}\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.$refs.audio.play();\n\t\t\t\t\tthis.getLyric();\n\t\t\t\t\tthis.number = -1;\n\t\t\t\t}) \n\t\t\t},\n\t\t\tplaying(state){\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tconst audio = this.$refs.audio;\n\t\t\t\t\tstate ? audio.play() : audio.pause();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang='scss' scoped>\n\t@import '@/common/scss/mixin.scss';\n\t.full-screen-player{\n\t\tposition:fixed;\n\t\tleft:0;\n\t\tbottom:0;\n\t\ttop:0;\n\t\tright:0;\n\t\tz-index:500;\n\t\tbackground-color:#232323;\n\t\tcolor:#ffffff;\n\t\t.player-background{\n\t\t\tposition:absolute;\n\t\t\tleft:0;\n\t\t\ttop:0;\n\t\t\twidth:100%;\n\t\t\theight:100%;\n\t\t\topacity:0.4;\n\t\t\tz-index:-1;\n\t\t\tfilter:blur(25px);\n\t\t}\n\t\t.top{\n\t\t\tmargin-top:30px;\n\t\t\tdisplay:flex;\n\t\t\tpadding:0 16px;\n\t\t\theight:20px;\n\t\t\tjustify-content:space-between;\n\t\t\talign-items:center;\n\t\t\t.arrow-down{\n\t\t\t\ttransform:rotateZ(-90deg);\n\t\t\t}\n\t\t\t.arrow-down,.menu{\n\t\t\t\tflex:0 0 20px;\n\t\t\t\t.iconfont{\n\t\t\t\t\tfont-size:20px;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.song-name{\n\t\t\t\ttext-align:center;\n\t\t\t}\n\t\t\t.song-name{\n\t\t\t\tflex:0 0 1;\n\t\t\t\theight:20px;\n\t\t\t\tline-height:20px;\n\t\t\t\tfont-size:18px;\n\t\t\t\t@include text-ellipsis;\n\t\t\t}\n\t\t}\n\t\t.middle{\n\t\t\tposition:fixed;\n\t\t\ttop:70px;\n\t\t\tbottom:135px;\n\t\t\twidth:100%;\n\t\t\twhite-space:nowrap;\n\t\t\toverflow:hidden;\n\t\t\t.singer-name{\n\t\t\t\tdisplay:flex;\n\t\t\t\tpadding:0 10px;\n\t\t\t\theight:44px;\n\t\t\t\tfont-size:14px;\n\t\t\t\tjustify-content:center;\n\t\t\t\talign-items:center;\n\t\t\t\tflex:1;\n\t\t\t\t.text{\n\t\t\t\t\tpadding:0 8px;\n\t\t\t\t\t@include text-ellipsis;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.singer-name:before,.singer-name:after{\n\t\t\t\tcontent:'';\n\t\t\t\tdisplay:block;\n\t\t\t\tflex:0 0 18px;\n\t\t\t\twidth:18px;\n\t\t\t\theight:1px;\n\t\t\t\tbackground-color:#ffffff;\n\t\t\t}\n\t\t\t.slide-left{\n\t\t\t\tdisplay:inline-block;\n\t\t\t\tposition:relative;\n\t\t\t\theight:100%;\n\t\t\t\twidth:100%;\n\t\t\t\tvertical-align:top;\n\t\t\t}\n\t\t\t.slide-right{\n\t\t\t\tdisplay:inline-block;\n\t\t\t\twidth:100%;\n\t\t\t\theight:100%;\n\t\t\t\toverflow:auto;\n\t\t\t\t.wrapper{\n\t\t\t\t\tposition:relative;\n\t\t\t\t\twidth:100%;\n\t\t\t\t\theight:100%;\n\t\t\t\t\toverflow:hidden;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.lyric-wrapper{\n\t\t\t\tbox-sizing:border-box;\n\t\t\t\tposition:absolute;\n\t\t\t\ttop:0;\n\t\t\t\tpadding:0 40px;\n\t\t\t\twidth:100%;\n\t\t\t\ttext-align:center;\n\t\t\t\t.lyric-text{\n\t\t\t\t\tpadding:6px 0;\n\t\t\t\t\tfont-size:14px;\n\t\t\t\t\tcolor:#fff;\n\t\t\t\t\twhite-space:normal;\n\t\t\t\t\t&.active{\n\t\t\t\t\t\tcolor:#2fcb97;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t.cd-wrapper{\n\t\t\t\tposition:absolute;\n\t\t\t\ttop:50%;\n\t\t\t\tleft:50%;\n\t\t\t\ttransform:translate(-50%,-50%);\n\t\t\t\twidth:86%;\n\t\t\t\theight:0;\n\t\t\t\tpadding-top:86%;\n\t\t\t\tborder-radius:50%;\n\t\t\t\tborder:8px solid rgba(0,0,0,.3);\n\t\t\t\t.cd{\n\t\t\t\t\tposition:absolute;\n\t\t\t\t\tleft:0;\n\t\t\t\t\ttop:0;\n\t\t\t\t\twidth:100%;\n\t\t\t\t\theight:100%;\n\t\t\t\t\timg{\n\t\t\t\t\t\tdisplay:block;\n\t\t\t\t\t\twidth:100%;\n\t\t\t\t\t\theight:100%;\n\t\t\t\t\t\tborder-radius:50%;\n\t\t\t\t\t}\n\t\t\t\t\t&.play{\n\t\t\t\t\t\tanimation:rotate 20s linear infinite;\n\t\t\t\t\t\tanimation-play-state:run;\n\t\t\t\t\t}\n\t\t\t\t\t&.pause{\n\t\t\t\t\t\tanimation:rotate 20s linear infinite;\n\t\t\t\t\t\tanimation-play-state:paused;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.bottom{\n\t\t\tposition:absolute;\n\t\t\tbottom:12px;\n\t\t\twidth:100%;\n\t\t\t.dot-wrapper{\n\t\t\t\theight:8px;\n\t\t\t\twidth:100%;\n\t\t\t\tfont-size:0;\n\t\t\t\ttext-align:center;\n\t\t\t\t.dot{\n\t\t\t\t\tdisplay:inline-block;\n\t\t\t\t\tmargin:0 4px;\n\t\t\t\t\twidth:8px;\n\t\t\t\t\theight:8px;\n\t\t\t\t\tbackground-color:#817d74;\n\t\t\t\t\tborder-radius:50%;\n\t\t\t\t\t&.active{\n\t\t\t\t\t\tbackground-color:#fff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t.progress-wrap{\n\t\t\t\tdisplay:flex;\n\t\t\t\tmargin:0 auto;\n\t\t\t\theight:45px;\n\t\t\t\twidth:90%;\n\t\t\t\tline-height:45px;\n\t\t\t\talign-items:center;\n\t\t\t\t.time{\n\t\t\t\t\tflex:0 0 36px;\n\t\t\t\t\twidth:36px;\n\t\t\t\t\tcolor:#fff;\n\t\t\t\t\tfont-size:12px;\n\t\t\t\t}\n\t\t\t\t.current{\n\t\t\t\t\ttext-align:left;\n\t\t\t\t}\n\t\t\t\t.total{\n\t\t\t\t\ttext-align:right;\n\t\t\t\t}\n\t\t\t\t.progress-bar{\n\t\t\t\t\tflex:1;\n\t\t\t\t\theight:2px;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.operator-wrap{\n\t\t\t\tdisplay:flex;\n\t\t\t\theight:54px;\n\t\t\t\tcolor:#fff;\n\t\t\t\talign-items:center;\n\t\t\t\tjustify-content:space-around;\n\t\t\t\t.mode,.collect{\n\t\t\t\t\t.iconfont{\n\t\t\t\t\t\tfont-size:24px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t.play{\n\t\t\t\t\t.iconfont{\n\t\t\t\t\t\tfont-size:40px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t.prev,.next{\n\t\t\t\t\t.iconfont{\n\t\t\t\t\t\tfont-size:30px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.slide-enter-active,.slide-leave-active{\n\t\ttransition:all .3s;\n\t}\n\t.slide-enter,.slide-leave-to{\n\t\ttransform:translate3d(0,100%,0);\n\t}\n\t/*图片旋转动画*/\n\t@keyframes rotate{\n\t\t0%{\n\t\t\ttransform:rotateZ(0deg);\n\t\t}\n\t\t100%{\n\t\t\ttransform:rotateZ(360deg);\n\t\t}\n\t}\n</style>\n"],"sourceRoot":"src/components/player"}]}
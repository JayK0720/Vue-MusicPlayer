{"remainingRequest":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js!/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jinkang/Desktop/Vue-MusicPlayer/src/components/music-list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/src/components/music-list/index.vue","mtime":1574690686141},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jinkang/Desktop/Vue-MusicPlayer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SongList from '@/base/song-list';\nimport Scroll from '@/base/scroll';\nimport Loading from '@/base/loading';\nvar TITLE_HEIGHT = 60;\nimport { prefixStyle } from '@/common/js/dom';\nimport { mapActions, mapGetters } from 'vuex';\nimport { getRandomInt } from '@/common/js/util';\nexport default {\n  name: 'music-list',\n  components: {\n    Scroll: Scroll,\n    SongList: SongList,\n    Loading: Loading\n  },\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    bgImage: {\n      type: String,\n      default: ''\n    },\n    songs: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    rank: {\n      type: Boolean,\n      default: false\n    }\n  },\n  created: function created() {\n    this.listenScroll = true, this.probeType = 3;\n  },\n  computed: _objectSpread({\n    bgStyle: function bgStyle() {\n      return \"backgroundImage:url(\".concat(this.bgImage, \")\");\n    }\n  }, mapGetters(['currentSong'])),\n  mounted: function mounted() {\n    this.bgHeight = this.$refs.bgImage.offsetHeight;\n    this.$refs.list.$el.style.top = this.bgHeight + 'px';\n    this.maxTranslateY = -this.bgHeight + TITLE_HEIGHT;\n  },\n  methods: _objectSpread({}, mapActions(['selectPlay', 'playAllMusic', 'savePlayHistory']), {\n    handleBack: function handleBack() {\n      this.$router.back();\n    },\n    scroll: function scroll(pos) {\n      /*\n      下面有两种思路，设置好一个最大的滚动偏移量(最大滚动距离为图片的高度 - 顶部预留的距离)\n      1. 当滚动的距离大于设置好的最大滚动偏移量时，直接return，\n      2. 求最大滚动距离偏移量的相反数 和 实时滚动的时的偏移量 两者的最大值，layer滚动的距离为两个参数的最大值\n      \n      tips: 综合考虑，第二种写法更好，灵活运用Math.max()函数，并且在设置z-index的时候，只用在判断语句里的重置zindex的值，\n      再统一 设置 元素的zindex值即可。\n      */\n      var translateY = Math.max(this.maxTranslateY, pos.y);\n      this.$refs.layer.style[prefixStyle('transform')] = \"translate3d(0,\".concat(translateY, \"px,0)\");\n      var zIndex = 0;\n\n      if (pos.y < this.maxTranslateY) {\n        zIndex = 10;\n        this.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n        this.$refs.bgImage.style.paddingTop = 0;\n      } else {\n        this.$refs.bgImage.style.paddingTop = '80%';\n        this.$refs.bgImage.style.height = 0;\n      }\n\n      this.$refs.bgImage.style.zIndex = zIndex;\n\n      if (pos.y > 0) {\n        var percent = Math.abs(pos.y / this.bgHeight);\n        var scale = percent + 1;\n        this.$refs.bgImage.style[prefixStyle('transform')] = \"scale(\".concat(scale, \")\");\n      } else {\n        var blur = Math.max(-pos.y / (this.bgHeight - TITLE_HEIGHT) * 15, 15);\n        this.$refs.filter.style[prefixStyle('backdrop-filter')] = \"filter(\".concat(blur, \"px)\");\n      }\n      /*\n      let maxTranslateY = this.bgHeight - TITLE_HEIGHT;\n      if(- pos.y > maxTranslateY) {\n      this.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n      this.$refs.bgImage.style.paddingTop = 0;\n      this.$refs.bgImage.style.zIndex = 10;\n      return;\n      }else{\n      this.$refs.bgImage.style.paddingTop = '80%';\n      this.$refs.bgImage.style.height = 0;\n      this.$refs.bgImage.style.zIndex = 0;\n      }\n      this.$refs.layer.style['transform'] = `translate3d(0,${pos.y}px,0)`\n      this.$refs.layer.style['webKittransform'] = `translate3d(0,${pos.y}px,0)` \n      */\n\n    },\n\n    /*\n    点击歌曲时，需要播放歌曲，展开播放歌曲页面，添加当前的播放列表，\n    */\n    selectSong: function selectSong(item, index) {\n      this.selectPlay({\n        list: this.songs,\n        index: index\n      });\n      this.savePlayHistory(item);\n    },\n    handlePlayAll: function handlePlayAll() {\n      this.playAllMusic({\n        list: this.songs,\n        index: 0\n      });\n    }\n  })\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div class=\"music-list\">\n\t\t<i \n\t\t\tclass=\"iconfont icon-back\"\n\t\t\t@touchstart.stop='handleBack'\n\t\t>&#xe64d;</i>\n\t\t<h2 class=\"singer-name\">{{title}}</h2>\n\t\t<div class=\"singer-wrapper\" :style='bgStyle' ref='bgImage'>\n\t\t\t<div class=\"filter\" ref='filter'></div>\n\t\t</div>\n\t\t<div class=\"bg-layer\" ref='layer'></div>\n\t\t<Scroll \n\t\t\t:data='songs' \n\t\t\tref='list' \n\t\t\tclass='list' \n\t\t\t:probe-type='probeType' \n\t\t\t:listen-scroll='listenScroll'\n\t\t\t@scroll='scroll'\n\t\t>\n\t\t\t<div class=\"song-list-wrapper\">\n\t\t\t\t<div class=\"play-btn\" @click='handlePlayAll'>\n\t\t\t\t\t<i class=\"iconfont\">&#xe652;</i>\n\t\t\t\t\t<span>全部播放</span>\n\t\t\t\t</div>\n\t\t\t\t<SongList \n\t\t\t\t\t:songs='songs'\n\t\t\t\t\t@selectItem='selectSong'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Loading v-show='!songs.length'/>\n\t\t</Scroll>\n\t</div>\n</template>\n\n<script>\n\timport SongList from '@/base/song-list'\n\timport Scroll from '@/base/scroll'\n\timport Loading from '@/base/loading'\n\tconst TITLE_HEIGHT = 60;\n\timport {prefixStyle} from '@/common/js/dom'\n\timport {mapActions,mapGetters} from 'vuex'\n\timport {getRandomInt} from '@/common/js/util'\n\texport default{\n\t\tname:'music-list',\n\t\tcomponents:{Scroll,SongList,Loading},\n\t\tprops:{\n\t\t\ttitle:{\n\t\t\t\ttype:String,\n\t\t\t\tdefault:''\n\t\t\t},\n\t\t\tbgImage:{\n\t\t\t\ttype:String,\n\t\t\t\tdefault:''\n\t\t\t},\n\t\t\tsongs:{\n\t\t\t\ttype:Array,\n\t\t\t\tdefault:function(){\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t},\n\t\t\trank:{\n\t\t\t\ttype:Boolean,\n\t\t\t\tdefault:false\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tthis.listenScroll = true,\n\t\t\tthis.probeType = 3\n\t\t},\n\t\tcomputed:{\n\t\t\tbgStyle(){\n\t\t\t\treturn `backgroundImage:url(${this.bgImage})`\n\t\t\t},\n\t\t\t...mapGetters(['currentSong'])\n\t\t},\n\t\tmounted() {\n\t\t\tthis.bgHeight = this.$refs.bgImage.offsetHeight;\n\t\t\tthis.$refs.list.$el.style.top = this.bgHeight + 'px';\n\t\t\tthis.maxTranslateY = -this.bgHeight + TITLE_HEIGHT;\n\t\t},\n\t\tmethods:{\n\t\t\t...mapActions(['selectPlay','playAllMusic','savePlayHistory']),\n\t\t\thandleBack(){\n\t\t\t\tthis.$router.back()\n\t\t\t},\n\t\t\tscroll(pos){\n\t\t\t\t/*\n\t\t\t\t下面有两种思路，设置好一个最大的滚动偏移量(最大滚动距离为图片的高度 - 顶部预留的距离)\n\t\t\t\t1. 当滚动的距离大于设置好的最大滚动偏移量时，直接return，\n\t\t\t\t2. 求最大滚动距离偏移量的相反数 和 实时滚动的时的偏移量 两者的最大值，layer滚动的距离为两个参数的最大值\n\t\t\t\t\n\t\t\t\ttips: 综合考虑，第二种写法更好，灵活运用Math.max()函数，并且在设置z-index的时候，只用在判断语句里的重置zindex的值，\n\t\t\t\t再统一 设置 元素的zindex值即可。\n\t\t\t\t*/\n\t\t\t\tlet translateY = Math.max(this.maxTranslateY,pos.y);\n\t\t\t\tthis.$refs.layer.style[prefixStyle('transform')] = `translate3d(0,${translateY}px,0)`;\n\t\t\t\t\n\t\t\t\tlet zIndex = 0;\n\t\t\t\tif(  pos.y < this.maxTranslateY ){\n\t\t\t\t   zIndex = 10;\n\t\t\t\t   this.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n\t\t\t\t   this.$refs.bgImage.style.paddingTop = 0;\n\t\t\t\t}else{\n\t\t\t\t   this.$refs.bgImage.style.paddingTop = '80%'\n\t\t\t\t   this.$refs.bgImage.style.height = 0;\n\t\t\t\t}\n\t\t\t\tthis.$refs.bgImage.style.zIndex = zIndex;\n\t\t\t\t\n\t\t\t\tif(pos.y > 0){\n\t\t\t\t\tlet percent = Math.abs(pos.y / this.bgHeight);\n\t\t\t\t\tlet scale = percent + 1;\n\t\t\t\t\tthis.$refs.bgImage.style[prefixStyle('transform')] = `scale(${scale})`;\n\t\t\t\t}else{\n\t\t\t\t\tlet blur = Math.max( -pos.y / (this.bgHeight - TITLE_HEIGHT) * 15, 15 );\n\t\t\t\t\tthis.$refs.filter.style[prefixStyle('backdrop-filter')] = `filter(${blur}px)`;\n\t\t\t\t}\n\t\t\t   /*\n\t\t\t\tlet maxTranslateY = this.bgHeight - TITLE_HEIGHT;\n\n\t\t\t\tif(- pos.y > maxTranslateY) {\n\t\t\t\t\tthis.$refs.bgImage.style.height = TITLE_HEIGHT + 'px';\n\t\t\t\t\tthis.$refs.bgImage.style.paddingTop = 0;\n\t\t\t\t\tthis.$refs.bgImage.style.zIndex = 10;\n\t\t\t\t\treturn;\n\t\t\t\t}else{\n\t\t\t\t\tthis.$refs.bgImage.style.paddingTop = '80%';\n\t\t\t\t\tthis.$refs.bgImage.style.height = 0;\n\t\t\t\t\tthis.$refs.bgImage.style.zIndex = 0;\n\t\t\t\t}\n\t\t\t\tthis.$refs.layer.style['transform'] = `translate3d(0,${pos.y}px,0)`\n\t\t\t\tthis.$refs.layer.style['webKittransform'] = `translate3d(0,${pos.y}px,0)` \n\t\t\t\t*/\n\t\t\t},\n\t\t\t/*\n\t\t\t点击歌曲时，需要播放歌曲，展开播放歌曲页面，添加当前的播放列表，\n\t\t\t*/\n\t\t\tselectSong(item,index){\n\t\t\t\tthis.selectPlay({list:this.songs,index});\n\t\t\t\tthis.savePlayHistory(item);\n\t\t\t},\n\t\t\thandlePlayAll(){\n\t\t\t\tthis.playAllMusic({list:this.songs,index:0});\n\t\t\t}\n\t\t},\n\t}\n</script>\n\n<style lang='scss' scoped>\n\t.music-list{\n\t\tposition:fixed;\n\t\tleft:0;\n\t\tright:0;\n\t\ttop:0;\n\t\tbottom:0;\n\t\tz-index:100;\n\t\tbackground-color:#fafafa;\n\t\t.icon-back{\n\t\t\tposition:absolute;\n\t\t\tcolor:#fff;\n\t\t\ttop:20px;\n\t\t\tleft:18px;\n\t\t\tfont-size:18px;\n\t\t\tz-index:30;\n\t\t}\n\t\t.singer-wrapper{\n\t\t\tposition:relative;\n\t\t\theight:0;\n\t\t\tpadding-top:80%;\n\t\t\tbackground-size:cover;\n\t\t\tbackground-repeat:no-repeat;\n\t\t\ttransform-origin:center top;\n\t\t\tbackground-color:#333;\n\t\t}\n\t\t.singer-name{\n\t\t\tposition:absolute;\n\t\t\ttop:20px;\n\t\t\twidth:100%;\n\t\t\ttext-align:center;\n\t\t\tfont-size:16px;\n\t\t\tcolor:#fff;\n\t\t\tline-height:18px;\n\t\t\tz-index:20;\n\t\t}\n\t\t.list{\n\t\t\tposition:absolute;\n\t\t\twidth:100%;\n\t\t\tbottom:0;\n\t\t\ttop:0;\n\t\t}\n\t\t.song-list-wrapper{\n\t\t\tpadding:0 16px;\n\t\t}\n\t\t.bg-layer{\n\t\t\tposition:relative;\n\t\t\theight:100%;\n\t\t\twidth:100%;\n\t\t\tbackground-color:#fafafa;\n\t\t}\n\t\t.play-btn{\n\t\t\tpadding-top:20px;\n\t\t\theight:25px;\n\t\t\tdisplay:flex;\n\t\t\talign-items:center;\n\t\t\t.iconfont{\n\t\t\t\tmargin-right:8px;\n\t\t\t\tcolor:#28fcb5;\n\t\t\t\tfont-size:24px;\n\t\t\t}\n\t\t\tspan{\n\t\t\t\tfont-size:14px;\n\t\t\t\tcolor:#212121;\n\t\t\t}\n\t\t}\n\t}\n</style>\n"],"sourceRoot":"src/components/music-list"}]}